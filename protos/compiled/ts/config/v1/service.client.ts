// @generated by protobuf-ts 2.9.3
// @generated from protobuf file "service.proto" (package "config.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ConfigService } from "./service";
import type { ResetPalWorldSettingsResponse } from "./settings";
import type { ResetPalWorldSettingsRequest } from "./settings";
import type { UpdatePalWorldSettingsResponse } from "./settings";
import type { UpdatePalWorldSettingsRequest } from "./settings";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetPalWorldSettingsResponse } from "./settings";
import type { GetPalWorldSettingsRequest } from "./settings";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service config.v1.ConfigService
 */
export interface IConfigServiceClient {
    /**
     * @generated from protobuf rpc: GetPalWorldSettings(config.v1.GetPalWorldSettingsRequest) returns (config.v1.GetPalWorldSettingsResponse);
     */
    getPalWorldSettings(input: GetPalWorldSettingsRequest, options?: RpcOptions): UnaryCall<GetPalWorldSettingsRequest, GetPalWorldSettingsResponse>;
    /**
     * @generated from protobuf rpc: UpdatePalWorldSettings(config.v1.UpdatePalWorldSettingsRequest) returns (config.v1.UpdatePalWorldSettingsResponse);
     */
    updatePalWorldSettings(input: UpdatePalWorldSettingsRequest, options?: RpcOptions): UnaryCall<UpdatePalWorldSettingsRequest, UpdatePalWorldSettingsResponse>;
    /**
     * @generated from protobuf rpc: ResetPalWorldSettings(config.v1.ResetPalWorldSettingsRequest) returns (config.v1.ResetPalWorldSettingsResponse);
     */
    resetPalWorldSettings(input: ResetPalWorldSettingsRequest, options?: RpcOptions): UnaryCall<ResetPalWorldSettingsRequest, ResetPalWorldSettingsResponse>;
}
/**
 * @generated from protobuf service config.v1.ConfigService
 */
export class ConfigServiceClient implements IConfigServiceClient, ServiceInfo {
    typeName = ConfigService.typeName;
    methods = ConfigService.methods;
    options = ConfigService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetPalWorldSettings(config.v1.GetPalWorldSettingsRequest) returns (config.v1.GetPalWorldSettingsResponse);
     */
    getPalWorldSettings(input: GetPalWorldSettingsRequest, options?: RpcOptions): UnaryCall<GetPalWorldSettingsRequest, GetPalWorldSettingsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetPalWorldSettingsRequest, GetPalWorldSettingsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdatePalWorldSettings(config.v1.UpdatePalWorldSettingsRequest) returns (config.v1.UpdatePalWorldSettingsResponse);
     */
    updatePalWorldSettings(input: UpdatePalWorldSettingsRequest, options?: RpcOptions): UnaryCall<UpdatePalWorldSettingsRequest, UpdatePalWorldSettingsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdatePalWorldSettingsRequest, UpdatePalWorldSettingsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ResetPalWorldSettings(config.v1.ResetPalWorldSettingsRequest) returns (config.v1.ResetPalWorldSettingsResponse);
     */
    resetPalWorldSettings(input: ResetPalWorldSettingsRequest, options?: RpcOptions): UnaryCall<ResetPalWorldSettingsRequest, ResetPalWorldSettingsResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ResetPalWorldSettingsRequest, ResetPalWorldSettingsResponse>("unary", this._transport, method, opt, input);
    }
}
