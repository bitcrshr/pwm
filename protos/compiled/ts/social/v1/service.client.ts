// @generated by protobuf-ts 2.9.3
// @generated from protobuf file "service.proto" (package "social.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SocialService } from "./service";
import type { GetServerPlayersResponse } from "./service";
import type { GetServerPlayersRequest } from "./service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GetOnlinePlayersResponse } from "./service";
import type { GetOnlinePlayersRequest } from "./service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service social.v1.SocialService
 */
export interface ISocialServiceClient {
    /**
     * @generated from protobuf rpc: GetOnlinePlayers(social.v1.GetOnlinePlayersRequest) returns (social.v1.GetOnlinePlayersResponse);
     */
    getOnlinePlayers(input: GetOnlinePlayersRequest, options?: RpcOptions): UnaryCall<GetOnlinePlayersRequest, GetOnlinePlayersResponse>;
    /**
     * @generated from protobuf rpc: GetServerPlayers(social.v1.GetServerPlayersRequest) returns (social.v1.GetServerPlayersResponse);
     */
    getServerPlayers(input: GetServerPlayersRequest, options?: RpcOptions): UnaryCall<GetServerPlayersRequest, GetServerPlayersResponse>;
}
/**
 * @generated from protobuf service social.v1.SocialService
 */
export class SocialServiceClient implements ISocialServiceClient, ServiceInfo {
    typeName = SocialService.typeName;
    methods = SocialService.methods;
    options = SocialService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetOnlinePlayers(social.v1.GetOnlinePlayersRequest) returns (social.v1.GetOnlinePlayersResponse);
     */
    getOnlinePlayers(input: GetOnlinePlayersRequest, options?: RpcOptions): UnaryCall<GetOnlinePlayersRequest, GetOnlinePlayersResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetOnlinePlayersRequest, GetOnlinePlayersResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetServerPlayers(social.v1.GetServerPlayersRequest) returns (social.v1.GetServerPlayersResponse);
     */
    getServerPlayers(input: GetServerPlayersRequest, options?: RpcOptions): UnaryCall<GetServerPlayersRequest, GetServerPlayersResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetServerPlayersRequest, GetServerPlayersResponse>("unary", this._transport, method, opt, input);
    }
}
